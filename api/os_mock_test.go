// Automatically generated by MockGen. DO NOT EDIT!
// Source: os/os.go

package api

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of OS interface
type MockOS struct {
	ctrl     *gomock.Controller
	recorder *_MockOSRecorder
}

// Recorder for MockOS (not exported)
type _MockOSRecorder struct {
	mock *MockOS
}

func NewMockOS(ctrl *gomock.Controller) *MockOS {
	mock := &MockOS{ctrl: ctrl}
	mock.recorder = &_MockOSRecorder{mock}
	return mock
}

func (_m *MockOS) EXPECT() *_MockOSRecorder {
	return _m.recorder
}

func (_m *MockOS) Command(name string, arg ...string) (string, error) {
	_s := []interface{}{name}
	for _, _x := range arg {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Command", _s...)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOSRecorder) Command(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Command", _s...)
}
